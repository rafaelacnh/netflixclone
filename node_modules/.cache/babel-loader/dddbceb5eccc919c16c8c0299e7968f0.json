{"ast":null,"code":"var _jsxFileName = \"/home/rafaela/Documents/Meus_Projetos/netflixclone/src/App.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable import/no-anonymous-default-export */\nimport React, { useEffect, useState } from 'react';\nimport Tmdb from './Tmdb';\nimport MovieRow from './components/MovieRow';\nimport FeaturedMovie from './components/FeaturedMovie';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _s(() => {\n  _s();\n\n  const [movieList, setMovieList] = useState([]); //\n\n  const [featureData, setFeatureData] = useState(null);\n  useEffect(() => {\n    const loadAll = async () => {\n      //funcao carregar tudo\n      //pegando lista total\n      let list = await Tmdb.getHomeList(); //\n\n      setMovieList(list);\n      console.log(list); //pegando featuredMovie\n\n      let orignals = list.filter(item => item.slug === 'originals'); //usando filter, aqui pegamos o item do array que tem valor 'originals' na propriedade slug\n\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.result.length - 1)); //gerando um valor aleatorio, com metodo math.random e arredondando p/ baixo e multiplicando pelo tamanho lista -1\n\n      let chosen = originals[0].items.result[randomChosen]; //filme escolhido\n\n      console.log(chosen);\n    };\n\n    loadAll();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [featureData && /*#__PURE__*/_jsxDEV(FeaturedMovie, {\n      item: featureData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"lists\",\n      children: movieList.map((item, key) => /*#__PURE__*/_jsxDEV(MovieRow, {\n        title: item.title,\n        items: item.items\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}, \"8qL0qSgMvkjer2zt/+yOSM7VpIk=\");","map":{"version":3,"sources":["/home/rafaela/Documents/Meus_Projetos/netflixclone/src/App.js"],"names":["React","useEffect","useState","Tmdb","MovieRow","FeaturedMovie","movieList","setMovieList","featureData","setFeatureData","loadAll","list","getHomeList","console","log","orignals","filter","item","slug","randomChosen","Math","floor","random","originals","items","result","length","chosen","map","key","title"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAO,WAAP;;AAGA,kBAAe,MAAM;AAAA;;AAEnB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C,CAFmB,CAE2B;;AAC9C,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,IAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,OAAO,GAAG,YAAY;AAAC;AAC3B;AACA,UAAIC,IAAI,GAAG,MAAMR,IAAI,CAACS,WAAL,EAAjB,CAF0B,CAES;;AACnCL,MAAAA,YAAY,CAACI,IAAD,CAAZ;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAJ0B,CAM1B;;AACA,UAAII,QAAQ,GAAGJ,IAAI,CAACK,MAAL,CAAaC,IAAD,IAAUA,IAAI,CAACC,IAAL,KAAc,WAApC,CAAf,CAP0B,CAOqC;;AAC/D,UAAIC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBC,SAAS,CAAC,CAAD,CAAT,CAAaC,KAAb,CAAmBC,MAAnB,CAA0BC,MAA1B,GAAkC,CAAnD,CAAX,CAAnB,CAR0B,CAQ0D;;AACpF,UAAIC,MAAM,GAAGJ,SAAS,CAAC,CAAD,CAAT,CAAaC,KAAb,CAAmBC,MAAnB,CAA0BN,YAA1B,CAAb,CAT0B,CAS0B;;AAEpDN,MAAAA,OAAO,CAACC,GAAR,CAAYa,MAAZ;AACD,KAZD;;AAaAjB,IAAAA,OAAO;AACR,GAfQ,EAeN,EAfM,CAAT;AAkBA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,eACGF,WAAW,iBAAI,QAAC,aAAD;AAAe,MAAA,IAAI,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,YADlB,eAEE;AAAS,MAAA,SAAS,EAAC,OAAnB;AAAA,gBACGF,SAAS,CAACsB,GAAV,CAAc,CAACX,IAAD,EAAOY,GAAP,kBACb,QAAC,QAAD;AAAoB,QAAA,KAAK,EAAEZ,IAAI,CAACa,KAAhC;AAAuC,QAAA,KAAK,EAAEb,IAAI,CAACO;AAAnD,SAAeK,GAAf;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAjCD","sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\n\nimport React, { useEffect, useState } from 'react';\nimport Tmdb from './Tmdb'\nimport MovieRow from './components/MovieRow'\nimport FeaturedMovie from './components/FeaturedMovie'\nimport './App.css'\n\n\nexport default () => {\n\n  const [movieList, setMovieList] = useState([])//\n  const [featureData, setFeatureData] = useState(null)\n\n  useEffect(() => {\n    const loadAll = async () => {//funcao carregar tudo\n      //pegando lista total\n      let list = await Tmdb.getHomeList()//\n      setMovieList(list)\n      console.log(list)\n\n      //pegando featuredMovie\n      let orignals = list.filter((item) => item.slug === 'originals')//usando filter, aqui pegamos o item do array que tem valor 'originals' na propriedade slug\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.result.length -1))//gerando um valor aleatorio, com metodo math.random e arredondando p/ baixo e multiplicando pelo tamanho lista -1\n      let chosen = originals[0].items.result[randomChosen]//filme escolhido\n\n      console.log(chosen)\n    }\n    loadAll()\n  }, [])\n\n\n  return (\n    <div className=\"page\">\n      {featureData && <FeaturedMovie item={featureData}/>}\n      <section className=\"lists\">\n        {movieList.map((item, key) => (\n          <MovieRow key={key} title={item.title} items={item.items}></MovieRow>\n        ))}\n      </section>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}