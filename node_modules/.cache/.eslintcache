[{"/home/rafaela/Documents/Meus_Projetos/netflixclone/src/index.js":"1","/home/rafaela/Documents/Meus_Projetos/netflixclone/src/App.js":"2","/home/rafaela/Documents/Meus_Projetos/netflixclone/src/Tmdb.js":"3","/home/rafaela/Documents/Meus_Projetos/netflixclone/src/components/MovieRow.js":"4","/home/rafaela/Documents/Meus_Projetos/netflixclone/src/components/FeaturedMovie.js":"5","/home/rafaela/Documents/Meus_Projetos/netflixclone/src/components/Header.js":"6"},{"size":154,"mtime":1621216454678,"results":"7","hashOfConfig":"8"},{"size":2409,"mtime":1621311117551,"results":"9","hashOfConfig":"8"},{"size":2837,"mtime":1621301106089,"results":"10","hashOfConfig":"8"},{"size":1784,"mtime":1621310565932,"results":"11","hashOfConfig":"8"},{"size":1889,"mtime":1621312317998,"results":"12","hashOfConfig":"8"},{"size":636,"mtime":1621308096202,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"13wbwcd",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"/home/rafaela/Documents/Meus_Projetos/netflixclone/src/index.js",[],["29","30"],"/home/rafaela/Documents/Meus_Projetos/netflixclone/src/App.js",["31"],"/* eslint-disable import/no-anonymous-default-export */\n\nimport React, { useEffect, useState } from 'react';\nimport Tmdb from './Tmdb'\nimport MovieRow from './components/MovieRow'\nimport FeaturedMovie from './components/FeaturedMovie'\nimport Header from './components/Header'\nimport './App.css'\n\n\nexport default () => {\n\n  const [movieList, setMovieList] = useState([])//\n  const [featureData, setFeatureData] = useState(null)\n  const [blackHeader, setBlackHeader] = useState(false)\n\n  useEffect(() => {\n    const loadAll = async () => {//funcao carregar tudo\n      //pegando lista total\n      let list = await Tmdb.getHomeList()//\n      setMovieList(list)\n      console.log(list)\n\n      //pegando featuredMovie\n      let originals = list.filter(item => item.slug === 'originals')//usando filter, aqui pegamos o item do array que tem valor 'originals' na propriedade slug\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length -1))//gerando um valor aleatorio, com metodo math.random e arredondando p/ baixo e multiplicando pelo tamanho lista -1\n      let chosen = originals[0].items.results[randomChosen]//pegando filme específico\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv')\n      console.log(chosen)\n      console.log(chosenInfo)\n      setFeatureData(chosenInfo)\n    }\n    loadAll()\n\n  }, [])\n\n  useEffect(() => {\n    const scrollListener = () => {\n      if (window.scrollY > 10) {\n        setBlackHeader(true)\n      } else {\n        setBlackHeader(false)\n      }\n    }\n    window.addEventListener('scroll', scrollListener)\n    return () => {\n      window.removeEventListener('scroll', scrollListener)\n    }\n  }, []);\n\n\n  return (\n    <div className=\"page\">\n      <Header black={blackHeader}/>\n      {featureData && <FeaturedMovie item={featureData}/>}\n      <section className=\"lists\">\n        {movieList.map((item, key) => (\n          <MovieRow key={key} title={item.title} items={item.items}></MovieRow>\n        ))}\n      </section>\n      <footer>\n        Feito com <span role=\"img\" aria-label=\"coração\"> por mim Rafaela Cunha <br/>Direitos de imagens para Netflix<br/>Dados pegos do Site Themoviedb.org</span>\n      </footer>\n    \n      {movieList.length < 0 &&\n        <div className=\"loading\">\n          <img src=\"https://www.filmelier.com/pt/br/news/wp-content/uploads/2020/03/netflix-loading.gif\"></img>\n        </div>\n      }\n    </div>\n   )\n}","/home/rafaela/Documents/Meus_Projetos/netflixclone/src/Tmdb.js",[],"/home/rafaela/Documents/Meus_Projetos/netflixclone/src/components/MovieRow.js",[],"/home/rafaela/Documents/Meus_Projetos/netflixclone/src/components/FeaturedMovie.js",["32"],"/home/rafaela/Documents/Meus_Projetos/netflixclone/src/components/Header.js",["33","34"],"/* eslint-disable import/no-anonymous-default-export */\nimport React from \"react\"\nimport './Header.css'\n\nexport default ({black}) => {\n    return (\n        <header className={black ? 'black': ''}>\n            <div className=\"header--logo\">\n                <a href=\"/\">\n                    <img src=\"https://logodownload.org/wp-content/uploads/2014/10/netflix-logo-5.png\"></img></a>\n            </div>\n            <div className=\"header--user\">\n                <a href=\"/\">\n                    <img src=\"https://i.pinimg.com/originals/10/12/c0/1012c06c7e1b0f8f5e60611992785e5a.png\"></img></a>\n            </div>\n        </header>\n    )\n}",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":67,"column":11,"nodeType":"41","endLine":67,"endColumn":106},{"ruleId":"42","severity":1,"message":"43","line":5,"column":1,"nodeType":"44","endLine":42,"endColumn":2},{"ruleId":"39","severity":1,"message":"40","line":10,"column":21,"nodeType":"41","endLine":10,"endColumn":103},{"ruleId":"39","severity":1,"message":"40","line":14,"column":21,"nodeType":"41","endLine":14,"endColumn":109},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]